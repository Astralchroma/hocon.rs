language: rust

rust:
  - stable
  - beta
  - nightly

stages:
  - test
  - advanced_tests
  - deploy_doc

matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true
  include:
    - stage: test
      name: rustfmt
      rust: stable
      install:
        - rustup component add rustfmt
      script:
        - cargo fmt -- --check
    - stage: test
      name: clippy
      rust: stable
      install:
        - rustup component add clippy
      script:
        - cargo clippy
    - stage: advanced_tests
      name: coverage
      rust: stable
      sudo: required
      install:
        - cargo install cargo-update || echo "cargo-update already installed"
        - cargo install cargo-travis || echo "cargo-travis already installed"
        - cargo install-update -a # update outdated cached binaries
      script:
        - cargo test --no-default-features --features serde-support # snapshot tests fails when using kcov
      after_success:
        - cargo coveralls --exclude-pattern tests --no-default-features --features serde-support # snapshot tests fails when using kcov
      addons:
        apt:
          packages:
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - binutils-dev
            - cmake
          sources:
            - kalakris-cmake
    - stage: advanced_tests
      name: hocon_test_suite
      rust: stable
      script:
        - ./hocon-test-suite.sh
    - stage: advanced_tests
      name: bench
      rust: stable
      install:
        - sudo apt-get install -y gnuplot
      script:
        - |
          GITHUB_REPO=https://${GH_TOKEN:-git}@github.com/${TRAVIS_REPO_SLUG}.git
          commitHash=$(git rev-parse HEAD)
          commitMessage=$(git log -1 --pretty=%B)

          cargo bench

          git clone --branch criterion --depth 1 "$GITHUB_REPO" criterion_branch &> /dev/null
          rsync -r --exclude=.git --delete target/criterion/ criterion_branch/
          pushd $REMOTE_DIR > /dev/null
          git add -A
          git status -s
          longMessage="Generated by $commitHash; pushed by build #$TRAVIS_BUILD_NUMBER."
          git commit -m "$longMessage" -m "$commitMessage" 
          git push origin criterion &> /dev/null || echo "Push failed."
    - stage: deploy_doc
      rust: stable
      script: 
        - |
          if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_PULL_REQUEST" = "false" && "$TRAVIS_BRANCH" == "master" && "$TRAVIS_RUST_VERSION" == "beta" ]]; then
            cargo doc --no-deps &&
            echo "<meta http-equiv=refresh content=0;url=hocon/index.html>" > target/doc/index.html &&
            git clone https://github.com/davisp/ghp-import.git &&
            ./ghp-import/ghp_import.py -n -p -f -m "Documentation upload" -r https://"$GH_TOKEN"@github.com/"$TRAVIS_REPO_SLUG.git" target/doc &&
            echo "Uploaded documentation"
          fi


cache: cargo

before_script:
  - export PATH="$PATH:$HOME/.cargo/bin"
